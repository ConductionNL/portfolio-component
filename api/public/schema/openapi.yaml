openapi: 3.0.2
info:
  title: ''
  version: V1.0
  description: |
    API Details
    - Component: 
    - Reference: portfolio-component
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/portfolio-component) / [zip](https://github.com/ConductionNL/portfolio-component/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](/schema/portfolio-component.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  /activities:
    get:
      tags:
        - Activity
      operationId: getActivityCollection
      summary: 'Retrieves the collection of Activity resources.'
      responses:
        200:
          description: 'Activity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Activity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Activity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[startDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[gradeType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[evaluation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[reference]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'startDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: startDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: endDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: gradeType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'gradeType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: evaluation
          in: query
          required: false
          schema:
            type: string
        -
          name: 'evaluation[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Activity
      operationId: postActivityCollection
      summary: 'Creates a Activity resource.'
      responses:
        201:
          description: 'Activity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
          links:
            GetActivityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getActivityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /activities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The new Activity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/activities/{id}':
    get:
      tags:
        - Activity
      operationId: getActivityItem
      summary: 'Retrieves a Activity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Activity resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Activity
      operationId: deleteActivityItem
      summary: 'Removes the Activity resource.'
      responses:
        204:
          description: 'Activity resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Activity
      operationId: putActivityItem
      summary: 'Replaces the Activity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Activity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The updated Activity resource'
    patch:
      tags:
        - Activity
      operationId: patchActivityItem
      summary: 'Updates the Activity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Activity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The updated Activity resource'
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /evaluations:
    get:
      tags:
        - Evaluation
      operationId: getEvaluationCollection
      summary: 'Retrieves the collection of Evaluation resources.'
      responses:
        200:
          description: 'Evaluation collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Evaluation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Evaluation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[assessor]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: assessor
          in: query
          required: false
          schema:
            type: string
        -
          name: 'assessor[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Evaluation
      operationId: postEvaluationCollection
      summary: 'Creates a Evaluation resource.'
      responses:
        201:
          description: 'Evaluation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
          links:
            GetEvaluationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEvaluationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /evaluations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Evaluation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Evaluation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
        description: 'The new Evaluation resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/evaluations/{id}':
    get:
      tags:
        - Evaluation
      operationId: getEvaluationItem
      summary: 'Retrieves a Evaluation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Evaluation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Evaluation
      operationId: deleteEvaluationItem
      summary: 'Removes the Evaluation resource.'
      responses:
        204:
          description: 'Evaluation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Evaluation
      operationId: putEvaluationItem
      summary: 'Replaces the Evaluation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Evaluation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Evaluation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Evaluation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
        description: 'The updated Evaluation resource'
    patch:
      tags:
        - Evaluation
      operationId: patchEvaluationItem
      summary: 'Updates the Evaluation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Evaluation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Evaluation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Evaluation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Evaluation:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Evaluation-write'
        description: 'The updated Evaluation resource'
  /formal_recognitions:
    get:
      tags:
        - FormalRecognition
      operationId: getFormalRecognitionCollection
      summary: 'Retrieves the collection of FormalRecognition resources.'
      responses:
        200:
          description: 'FormalRecognition collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/FormalRecognition:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/FormalRecognition:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormalRecognition-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organisation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[registrationNumber]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[level]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateReceived]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateReceived[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateReceived[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateReceived[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateReceived[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organisation
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organisation[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: registrationNumber
          in: query
          required: false
          schema:
            type: string
        -
          name: 'registrationNumber[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: level
          in: query
          required: false
          schema:
            type: string
        -
          name: 'level[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateReceived
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateReceived[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - FormalRecognition
      operationId: postFormalRecognitionCollection
      summary: 'Creates a FormalRecognition resource.'
      responses:
        201:
          description: 'FormalRecognition resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/html:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
          links:
            GetFormalRecognitionItem:
              parameters:
                id: '$response.body#/id'
              operationId: getFormalRecognitionItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /formal_recognitions/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/FormalRecognition:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          text/html:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
        description: 'The new FormalRecognition resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/formal_recognitions/{id}':
    get:
      tags:
        - FormalRecognition
      operationId: getFormalRecognitionItem
      summary: 'Retrieves a FormalRecognition resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'FormalRecognition resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/html:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - FormalRecognition
      operationId: deleteFormalRecognitionItem
      summary: 'Removes the FormalRecognition resource.'
      responses:
        204:
          description: 'FormalRecognition resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - FormalRecognition
      operationId: putFormalRecognitionItem
      summary: 'Replaces the FormalRecognition resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'FormalRecognition resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/html:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/FormalRecognition:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          text/html:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
        description: 'The updated FormalRecognition resource'
    patch:
      tags:
        - FormalRecognition
      operationId: patchFormalRecognitionItem
      summary: 'Updates the FormalRecognition resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'FormalRecognition resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/FormalRecognition:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
            text/html:
              schema:
                $ref: '#/components/schemas/FormalRecognition-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
          text/html:
            schema:
              $ref: '#/components/schemas/FormalRecognition-write'
        description: 'The updated FormalRecognition resource'
  /portfolios:
    get:
      tags:
        - Portfolio
      operationId: getPortfolioCollection
      summary: 'Retrieves the collection of Portfolio resources.'
      responses:
        200:
          description: 'Portfolio collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Portfolio:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Portfolio:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[owner]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: owner
          in: query
          required: false
          schema:
            type: string
        -
          name: 'owner[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Portfolio
      operationId: postPortfolioCollection
      summary: 'Creates a Portfolio resource.'
      responses:
        201:
          description: 'Portfolio resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
          links:
            GetPortfolioItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPortfolioItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /portfolios/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Portfolio:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Portfolio:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
        description: 'The new Portfolio resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/portfolios/{id}':
    get:
      tags:
        - Portfolio
      operationId: getPortfolioItem
      summary: 'Retrieves a Portfolio resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Portfolio resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Portfolio
      operationId: deletePortfolioItem
      summary: 'Removes the Portfolio resource.'
      responses:
        204:
          description: 'Portfolio resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Portfolio
      operationId: putPortfolioItem
      summary: 'Replaces the Portfolio resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Portfolio resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Portfolio:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Portfolio:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
        description: 'The updated Portfolio resource'
    patch:
      tags:
        - Portfolio
      operationId: patchPortfolioItem
      summary: 'Updates the Portfolio resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Portfolio resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Portfolio:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Portfolio-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Portfolio:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Portfolio-write'
        description: 'The updated Portfolio resource'
  /products:
    get:
      tags:
        - Product
      operationId: getProductCollection
      summary: 'Retrieves the collection of Product resources.'
      responses:
        200:
          description: 'Product collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Product:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Product:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Product
      operationId: postProductCollection
      summary: 'Creates a Product resource.'
      responses:
        201:
          description: 'Product resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
          links:
            GetProductItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProductItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /products/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The new Product resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/products/{id}':
    get:
      tags:
        - Product
      operationId: getProductItem
      summary: 'Retrieves a Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Product resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Product
      operationId: deleteProductItem
      summary: 'Removes the Product resource.'
      responses:
        204:
          description: 'Product resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Product
      operationId: putProductItem
      summary: 'Replaces the Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Product resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The updated Product resource'
    patch:
      tags:
        - Product
      operationId: patchProductItem
      summary: 'Updates the Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Product resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The updated Product resource'
  /reflections:
    get:
      tags:
        - Reflection
      operationId: getReflectionCollection
      summary: 'Retrieves the collection of Reflection resources.'
      responses:
        200:
          description: 'Reflection collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Reflection:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Reflection:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflection-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[author]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[rights]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: author
          in: query
          required: false
          schema:
            type: string
        -
          name: 'author[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: rights
          in: query
          required: false
          schema:
            type: string
        -
          name: 'rights[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Reflection
      operationId: postReflectionCollection
      summary: 'Creates a Reflection resource.'
      responses:
        201:
          description: 'Reflection resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Reflection-read'
          links:
            GetReflectionItem:
              parameters:
                id: '$response.body#/id'
              operationId: getReflectionItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reflections/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Reflection:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Reflection:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Reflection-write'
        description: 'The new Reflection resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/reflections/{id}':
    get:
      tags:
        - Reflection
      operationId: getReflectionItem
      summary: 'Retrieves a Reflection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Reflection resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Reflection-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Reflection
      operationId: deleteReflectionItem
      summary: 'Removes the Reflection resource.'
      responses:
        204:
          description: 'Reflection resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Reflection
      operationId: putReflectionItem
      summary: 'Replaces the Reflection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Reflection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Reflection-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Reflection:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Reflection:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Reflection-write'
        description: 'The updated Reflection resource'
    patch:
      tags:
        - Reflection
      operationId: patchReflectionItem
      summary: 'Updates the Reflection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Reflection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Reflection:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Reflection-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Reflection-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Reflection:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Reflection-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Reflection-write'
        description: 'The updated Reflection resource'
  /results:
    get:
      tags:
        - Result
      operationId: getResultCollection
      summary: 'Retrieves the collection of Result resources.'
      responses:
        200:
          description: 'Result collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Result
      operationId: postResultCollection
      summary: 'Creates a Result resource.'
      responses:
        201:
          description: 'Result resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
          links:
            GetResultItem:
              parameters:
                id: '$response.body#/id'
              operationId: getResultItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /results/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Result-write'
        description: 'The new Result resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/results/{id}':
    get:
      tags:
        - Result
      operationId: getResultItem
      summary: 'Retrieves a Result resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Result resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Result
      operationId: deleteResultItem
      summary: 'Removes the Result resource.'
      responses:
        204:
          description: 'Result resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Result
      operationId: putResultItem
      summary: 'Replaces the Result resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Result resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Result-write'
        description: 'The updated Result resource'
    patch:
      tags:
        - Result
      operationId: patchResultItem
      summary: 'Updates the Result resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Result resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Result-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Result-write'
        description: 'The updated Result resource'
components:
  schemas:
    Activity-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the activity'
          type: string
        description:
          description: 'Description of the activity'
          type: string
          nullable: true
        type:
          description: 'Type of the activity'
          type: string
        startDate:
          description: 'The date the activity started.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The date the activity ended.'
          type: string
          format: date-time
          nullable: true
        gradeType:
          description: 'Type of the grade E.G the max obtainable points'
          type: string
        evaluation:
          description: 'Evaluation / score of the activity'
          type: string
        reference:
          description: 'reference for the activity'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-read'
        products:
          description: 'Products in this activity'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - type
        - gradeType
        - evaluation
        - reference
    Activity-write:
      type: object
      description: ''
      required:
        - name
        - type
        - gradeType
        - evaluation
        - reference
      properties:
        name:
          description: 'Name of the activity'
          type: string
        description:
          description: 'Description of the activity'
          type: string
          nullable: true
        type:
          description: 'Type of the activity'
          type: string
        startDate:
          description: 'The date the activity started.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The date the activity ended.'
          type: string
          format: date-time
          nullable: true
        gradeType:
          description: 'Type of the grade E.G the max obtainable points'
          type: string
        evaluation:
          description: 'Evaluation / score of the activity'
          type: string
        reference:
          description: 'reference for the activity'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-write'
        products:
          description: 'Products in this activity'
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
    'Activity:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the activity'
          type: string
        description:
          description: 'Description of the activity'
          type: string
          nullable: true
        type:
          description: 'Type of the activity'
          type: string
        startDate:
          description: 'The date the activity started.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The date the activity ended.'
          type: string
          format: date-time
          nullable: true
        gradeType:
          description: 'Type of the grade E.G the max obtainable points'
          type: string
        evaluation:
          description: 'Evaluation / score of the activity'
          type: string
        reference:
          description: 'reference for the activity'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-read'
        products:
          description: 'Products in this activity'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - type
        - gradeType
        - evaluation
        - reference
    'Activity:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - type
        - gradeType
        - evaluation
        - reference
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the activity'
          type: string
        description:
          description: 'Description of the activity'
          type: string
          nullable: true
        type:
          description: 'Type of the activity'
          type: string
        startDate:
          description: 'The date the activity started.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The date the activity ended.'
          type: string
          format: date-time
          nullable: true
        gradeType:
          description: 'Type of the grade E.G the max obtainable points'
          type: string
        evaluation:
          description: 'Evaluation / score of the activity'
          type: string
        reference:
          description: 'reference for the activity'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-write'
        products:
          description: 'Products in this activity'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Evaluation-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the evaluation'
          type: string
        description:
          description: 'Description of the evaluation'
          type: string
          nullable: true
        status:
          description: 'The status of this evaluation.'
          type: string
          nullable: true
        assessor:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Evaluation-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          description: 'Name of the evaluation'
          type: string
        description:
          description: 'Description of the evaluation'
          type: string
          nullable: true
        status:
          description: 'The status of this evaluation.'
          type: string
          nullable: true
        assessor:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-write'
    'Evaluation:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the evaluation'
          type: string
        description:
          description: 'Description of the evaluation'
          type: string
          nullable: true
        status:
          description: 'The status of this evaluation.'
          type: string
          nullable: true
        assessor:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Evaluation:jsonld-write':
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the evaluation'
          type: string
        description:
          description: 'Description of the evaluation'
          type: string
          nullable: true
        status:
          description: 'The status of this evaluation.'
          type: string
          nullable: true
        assessor:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-write'
    FormalRecognition-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the recognition'
          type: string
        description:
          description: 'Description of the recognition'
          type: string
          nullable: true
        organisation:
          description: 'Name of the organisation.'
          type: string
          nullable: true
        registrationNumber:
          description: 'Registration number of the organisation.'
          type: string
          nullable: true
        level:
          description: 'Level of recognition.'
          type: string
          nullable: true
        dateReceived:
          description: 'The date you received the recognition.'
          type: string
          format: date-time
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    FormalRecognition-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          description: 'Name of the recognition'
          type: string
        description:
          description: 'Description of the recognition'
          type: string
          nullable: true
        organisation:
          description: 'Name of the organisation.'
          type: string
          nullable: true
        registrationNumber:
          description: 'Registration number of the organisation.'
          type: string
          nullable: true
        level:
          description: 'Level of recognition.'
          type: string
          nullable: true
        dateReceived:
          description: 'The date you received the recognition.'
          type: string
          format: date-time
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-write'
    'FormalRecognition:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the recognition'
          type: string
        description:
          description: 'Description of the recognition'
          type: string
          nullable: true
        organisation:
          description: 'Name of the organisation.'
          type: string
          nullable: true
        registrationNumber:
          description: 'Registration number of the organisation.'
          type: string
          nullable: true
        level:
          description: 'Level of recognition.'
          type: string
          nullable: true
        dateReceived:
          description: 'The date you received the recognition.'
          type: string
          format: date-time
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'FormalRecognition:jsonld-write':
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the recognition'
          type: string
        description:
          description: 'Description of the recognition'
          type: string
          nullable: true
        organisation:
          description: 'Name of the organisation.'
          type: string
          nullable: true
        registrationNumber:
          description: 'Registration number of the organisation.'
          type: string
          nullable: true
        level:
          description: 'Level of recognition.'
          type: string
          nullable: true
        dateReceived:
          description: 'The date you received the recognition.'
          type: string
          format: date-time
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-write'
    Portfolio-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the portfolio'
          type: string
        description:
          description: 'Description of the portfolio'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        owner:
          description: 'The owner where this Portfolio is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-read'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
      required:
        - name
    Portfolio-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          description: 'Name of the portfolio'
          type: string
        description:
          description: 'Description of the portfolio'
          type: string
          nullable: true
        owner:
          description: 'The owner where this Portfolio is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-write'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
    'Portfolio:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the portfolio'
          type: string
        description:
          description: 'Description of the portfolio'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        owner:
          description: 'The owner where this Portfolio is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-read'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
      required:
        - name
    'Portfolio:jsonld-write':
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the portfolio'
          type: string
        description:
          description: 'Description of the portfolio'
          type: string
          nullable: true
        owner:
          description: 'The owner where this Portfolio is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-write'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
    Product-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the product'
          type: string
        description:
          description: 'Description of the product'
          type: string
          nullable: true
        type:
          description: 'Type of the product'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-read'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio-read'
      required:
        - name
        - type
    Product-write:
      type: object
      description: ''
      required:
        - name
        - type
      properties:
        name:
          description: 'Name of the product'
          type: string
        description:
          description: 'Description of the product'
          type: string
          nullable: true
        type:
          description: 'Type of the product'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-write'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity-write'
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio-write'
    'Product:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the product'
          type: string
        description:
          description: 'Description of the product'
          type: string
          nullable: true
        type:
          description: 'Type of the product'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-read'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio:jsonld-read'
      required:
        - name
        - type
    'Product:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - type
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the product'
          type: string
        description:
          description: 'Description of the product'
          type: string
          nullable: true
        type:
          description: 'Type of the product'
          type: string
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-write'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity:jsonld-write'
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio:jsonld-write'
    Reflection-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the reflection'
          type: string
          nullable: true
        description:
          description: 'Description of the reflection'
          type: string
          nullable: true
        status:
          description: 'The status of this reflection.'
          type: string
          nullable: true
        author:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        rights:
          description: 'Who has the rights to see or edit the reflection'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Reflection-write:
      type: object
      description: ''
      properties:
        name:
          description: 'Name of the reflection'
          type: string
          nullable: true
        description:
          description: 'Description of the reflection'
          type: string
          nullable: true
        status:
          description: 'The status of this reflection.'
          type: string
          nullable: true
        author:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        rights:
          description: 'Who has the rights to see or edit the reflection'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result-write'
    'Reflection:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the reflection'
          type: string
          nullable: true
        description:
          description: 'Description of the reflection'
          type: string
          nullable: true
        status:
          description: 'The status of this reflection.'
          type: string
          nullable: true
        author:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        rights:
          description: 'Who has the rights to see or edit the reflection'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    'Reflection:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the reflection'
          type: string
          nullable: true
        description:
          description: 'Description of the reflection'
          type: string
          nullable: true
        status:
          description: 'The status of this reflection.'
          type: string
          nullable: true
        author:
          description: 'a contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        rights:
          description: 'Who has the rights to see or edit the reflection'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        result:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Result:jsonld-write'
    Result-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the Results'
          type: string
        description:
          description: 'Description of the results'
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity-read'
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/Evaluation-read'
        formalRecognitions:
          type: array
          items:
            $ref: '#/components/schemas/FormalRecognition-read'
        reflections:
          type: array
          items:
            $ref: '#/components/schemas/Reflection-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio-read'
      required:
        - name
        - description
    Result-write:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        name:
          description: 'Name of the Results'
          type: string
        description:
          description: 'Description of the results'
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity-write'
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/Evaluation-write'
        formalRecognitions:
          type: array
          items:
            $ref: '#/components/schemas/FormalRecognition-write'
        reflections:
          type: array
          items:
            $ref: '#/components/schemas/Reflection-write'
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio-write'
    'Result:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the Results'
          type: string
        description:
          description: 'Description of the results'
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity:jsonld-read'
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/Evaluation:jsonld-read'
        formalRecognitions:
          type: array
          items:
            $ref: '#/components/schemas/FormalRecognition:jsonld-read'
        reflections:
          type: array
          items:
            $ref: '#/components/schemas/Reflection:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio:jsonld-read'
      required:
        - name
        - description
    'Result:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the Results'
          type: string
        description:
          description: 'Description of the results'
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity:jsonld-write'
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/Evaluation:jsonld-write'
        formalRecognitions:
          type: array
          items:
            $ref: '#/components/schemas/FormalRecognition:jsonld-write'
        reflections:
          type: array
          items:
            $ref: '#/components/schemas/Reflection:jsonld-write'
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio:jsonld-write'
definitions:
  Activity-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the activity'
        type: string
        example: 'activity name'
        maxLength: 255
      description:
        description: 'Description of the activity'
        type: string
        example: 'description of activity'
        maxLength: 2550
      type:
        description: 'Type of the activity'
        type: string
        example: internship
        maxLength: 255
      startDate:
        description: 'The date the activity started.'
        type: \DateTime
        example: 10-02-2019
      endDate:
        description: 'The date the activity ended.'
        type: \DateTime
        example: 10-12-2019
      gradeType:
        description: 'Type of the grade E.G the max obtainable points'
        type: string
        example: points
        maxLength: 255
      evaluation:
        description: 'Evaluation / score of the activity'
        type: string
        example: '8.5'
        maxLength: 255
      reference:
        description: 'reference for the activity'
        type: string
        example: 'Information (link) about the reference'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      result: []
      products:
        description: 'Products in this activity'
        type: \ArrayCollection
    required:
      - name
      - type
      - gradeType
      - evaluation
      - reference
  Activity-write:
    properties:
      name:
        description: 'Name of the activity'
        type: string
        example: 'activity name'
        maxLength: 255
      description:
        description: 'Description of the activity'
        type: string
        example: 'description of activity'
        maxLength: 2550
      type:
        description: 'Type of the activity'
        type: string
        example: internship
        maxLength: 255
      startDate:
        description: 'The date the activity started.'
        type: \DateTime
        example: 10-02-2019
      endDate:
        description: 'The date the activity ended.'
        type: \DateTime
        example: 10-12-2019
      gradeType:
        description: 'Type of the grade E.G the max obtainable points'
        type: string
        example: points
        maxLength: 255
      evaluation:
        description: 'Evaluation / score of the activity'
        type: string
        example: '8.5'
        maxLength: 255
      reference:
        description: 'reference for the activity'
        type: string
        example: 'Information (link) about the reference'
        maxLength: 255
      result: []
      products:
        description: 'Products in this activity'
        type: \ArrayCollection
    required:
      - name
      - type
      - gradeType
      - evaluation
      - reference
  Evaluation-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the evaluation'
        type: string
        example: 'title of the evaluation'
        maxLength: 255
      description:
        description: 'Description of the evaluation'
        type: string
        example: 'a description of the evaluation'
        maxLength: 2550
      status:
        description: 'The status of this evaluation.'
        type: string
        example: definitive
        maxLength: 255
      assessor:
        description: 'a contact component person'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        format: url
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      result: []
    required:
      - name
  Evaluation-write:
    properties:
      name:
        description: 'Name of the evaluation'
        type: string
        example: 'title of the evaluation'
        maxLength: 255
      description:
        description: 'Description of the evaluation'
        type: string
        example: 'a description of the evaluation'
        maxLength: 2550
      status:
        description: 'The status of this evaluation.'
        type: string
        example: definitive
        maxLength: 255
      assessor:
        description: 'a contact component person'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        format: url
      result: []
    required:
      - name
  FormalRecognition-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the recognition'
        type: string
        example: 'reflection name'
        maxLength: 255
      description:
        description: 'Description of the recognition'
        type: string
        example: 'description of the recognition'
        maxLength: 255
      organisation:
        description: 'Name of the organisation.'
        type: string
        example: Conduction
        maxLength: 255
      registrationNumber:
        description: 'Registration number of the organisation.'
        type: string
        example: 'Registration number'
        maxLength: 256
      level:
        description: 'Level of recognition.'
        type: string
        example: 'drivers licence'
        maxLength: 255
      dateReceived:
        description: 'The date you received the recognition.'
        type: \DateTime
        example: 10-02-2019
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      result: []
    required:
      - name
  FormalRecognition-write:
    properties:
      name:
        description: 'Name of the recognition'
        type: string
        example: 'reflection name'
        maxLength: 255
      description:
        description: 'Description of the recognition'
        type: string
        example: 'description of the recognition'
        maxLength: 255
      organisation:
        description: 'Name of the organisation.'
        type: string
        example: Conduction
        maxLength: 255
      registrationNumber:
        description: 'Registration number of the organisation.'
        type: string
        example: 'Registration number'
        maxLength: 256
      level:
        description: 'Level of recognition.'
        type: string
        example: 'drivers licence'
        maxLength: 255
      dateReceived:
        description: 'The date you received the recognition.'
        type: \DateTime
        example: 10-02-2019
      result: []
    required:
      - name
  Portfolio-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the portfolio'
        type: string
        example: 'title of the portfolio'
        maxLength: 255
      description:
        description: 'Description of the portfolio'
        type: string
        example: 'Description of the portfolio'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      owner:
        description: 'The owner where this Portfolio is related too'
        type: string
        example: 'https://cc.conduction.nl/people'
        maxLength: 255
        format: url
      results: []
      products: []
    required:
      - name
  Portfolio-write:
    properties:
      name:
        description: 'Name of the portfolio'
        type: string
        example: 'title of the portfolio'
        maxLength: 255
      description:
        description: 'Description of the portfolio'
        type: string
        example: 'Description of the portfolio'
        maxLength: 255
      owner:
        description: 'The owner where this Portfolio is related too'
        type: string
        example: 'https://cc.conduction.nl/people'
        maxLength: 255
        format: url
      results: []
      products: []
    required:
      - name
  Product-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the product'
        type: string
        example: 'Art and me'
        maxLength: 255
      description:
        description: 'Description of the product'
        type: string
        example: 'A painting about my cat'
        maxLength: 255
      type:
        description: 'Type of the product'
        type: string
        example: 'assessed product'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      result: []
      activity: []
      portfolios: []
    required:
      - name
      - type
  Product-write:
    properties:
      name:
        description: 'Name of the product'
        type: string
        example: 'Art and me'
        maxLength: 255
      description:
        description: 'Description of the product'
        type: string
        example: 'A painting about my cat'
        maxLength: 255
      type:
        description: 'Type of the product'
        type: string
        example: 'assessed product'
        maxLength: 255
      result: []
      activity: []
      portfolios: []
    required:
      - name
      - type
  Reflection-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the reflection'
        type: string
        example: 'reflection name'
        maxLength: 255
      description:
        description: 'Description of the reflection'
        type: string
        example: 'description of reflection'
        maxLength: 255
      status:
        description: 'The status of this reflection.'
        type: string
        example: definitive
        maxLength: 255
      author:
        description: 'a contact component person'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        format: url
      rights:
        description: 'Who has the rights to see or edit the reflection'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        format: url
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      result: []
    required: []
  Reflection-write:
    properties:
      name:
        description: 'Name of the reflection'
        type: string
        example: 'reflection name'
        maxLength: 255
      description:
        description: 'Description of the reflection'
        type: string
        example: 'description of reflection'
        maxLength: 255
      status:
        description: 'The status of this reflection.'
        type: string
        example: definitive
        maxLength: 255
      author:
        description: 'a contact component person'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        format: url
      rights:
        description: 'Who has the rights to see or edit the reflection'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        format: url
      result: []
    required: []
  Result-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the Results'
        type: string
        example: 'Result name'
        maxLength: 255
      description:
        description: 'Description of the results'
        type: string
        example: 'description of the results'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      products: []
      activities: []
      evaluations: []
      formalRecognitions: []
      reflections: []
      portfolios: []
    required:
      - name
      - description
  Result-write:
    properties:
      name:
        description: 'Name of the Results'
        type: string
        example: 'Result name'
        maxLength: 255
      description:
        description: 'Description of the results'
        type: string
        example: 'description of the results'
        maxLength: 255
      products: []
      activities: []
      evaluations: []
      formalRecognitions: []
      reflections: []
      portfolios: []
    required:
      - name
      - description
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-02-19 15:25:54'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-02-19 15:25:54'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-02-19 15:25:54'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-02-19 15:25:54'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Activity
    description: |
      
      
      
  -
    name: Evaluation
    description: |
      
      
      
  -
    name: FormalRecognition
    description: |
      
      
      
  -
    name: Portfolio
    description: |
      
      
      
  -
    name: Product
    description: |
      
      
      
  -
    name: Reflection
    description: |
      
      
      
  -
    name: Result
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: conduction.nl
    url: portfolio-component.dev.conduction.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
